1. Analise o código e tente identificar eventuais erros

    O código compila e executa corretamente. Portanto, não há erros aparentes.

2. Utilizando as ferramentas, confirme a sua avaliação ou identifique problemas.

    Relatório do Valgrind:

    ==7372== Memcheck, a memory error detector
    ==7372== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
    ==7372== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
    ==7372== Command: ./file
    ==7372== 
    ==7372== 
    ==7372== HEAP SUMMARY:
    ==7372==     in use at exit: 35 bytes in 2 blocks
    ==7372==   total heap usage: 3 allocs, 1 frees, 47 bytes allocated
    ==7372== 
    ==7372== LEAK SUMMARY:
    ==7372==    definitely lost: 35 bytes in 2 blocks
    ==7372==    indirectly lost: 0 bytes in 0 blocks
    ==7372==      possibly lost: 0 bytes in 0 blocks
    ==7372==    still reachable: 0 bytes in 0 blocks
    ==7372==         suppressed: 0 bytes in 0 blocks
    ==7372== Rerun with --leak-check=full to see details of leaked memory
    ==7372== 
    ==7372== For lists of detected and suppressed errors, rerun with: -s
    ==7372== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

    O valgrind não acusa erros.

    Relatório do Valgrind com a adição do comando "--leak-check=full":

    ==7373== Memcheck, a memory error detector
    ==7373== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
    ==7373== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
    ==7373== Command: ./file
    ==7373== 
    ==7373== 
    ==7373== HEAP SUMMARY:
    ==7373==     in use at exit: 35 bytes in 2 blocks
    ==7373==   total heap usage: 3 allocs, 1 frees, 47 bytes allocated
    ==7373== 
    ==7373== 16 bytes in 1 blocks are definitely lost in loss record 1 of 2
    ==7373==    at 0x4843828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==7373==    by 0x1091A6: main (c13.c:11)
    ==7373== 
    ==7373== 19 bytes in 1 blocks are definitely lost in loss record 2 of 2
    ==7373==    at 0x4843828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==7373==    by 0x10917E: main (c13.c:8)
    ==7373== 
    ==7373== LEAK SUMMARY:
    ==7373==    definitely lost: 35 bytes in 2 blocks
    ==7373==    indirectly lost: 0 bytes in 0 blocks
    ==7373==      possibly lost: 0 bytes in 0 blocks
    ==7373==    still reachable: 0 bytes in 0 blocks
    ==7373==         suppressed: 0 bytes in 0 blocks
    ==7373== 
    ==7373== For lists of detected and suppressed errors, rerun with: -s
    ==7373== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

    Esse relatório acusa que vários bytes foram perdidos, na linha 8 e 11 do código.

    O código aloca memória dinamicamente três vezes e libera a memória após a segunda alocação. No entanto, após a terceira alocação, a memória não é liberada novamente. 
    Isso pode levar a um vazamento de memória, uma vez que a segunda alocação de memória não é liberada antes de alocar mais memória na terceira vez.

3. Corrija o código, removendo o(s) erro(s) identificado(s).

    #include <stdio.h>
    #include <stdlib.h>

    int main() {
        char *p;

        p = (char *)malloc(19);

        free(p); // Libere a primeira alocação de memória
        p = (char *)malloc(12);

        free(p); // Libere a segunda alocação de memória
        p = (char *)malloc(16);

        free(p); // Libere a terceira alocação de memória

        return 0;
    }

4. Utilizando novamente as ferramentas, verifique a remoção do erro.

    Relatório do Valgrind:

    ==7608== Memcheck, a memory error detector
    ==7608== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
    ==7608== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
    ==7608== Command: ./file
    ==7608== 
    ==7608== 
    ==7608== HEAP SUMMARY:
    ==7608==     in use at exit: 0 bytes in 0 blocks
    ==7608==   total heap usage: 3 allocs, 3 frees, 47 bytes allocated
    ==7608== 
    ==7608== All heap blocks were freed -- no leaks are possible
    ==7608== 
    ==7608== For lists of detected and suppressed errors, rerun with: -s
    ==7608== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

    Relatório do Valgrind com a adição do comando "--leak-check=full":

    ==7610== Memcheck, a memory error detector
    ==7610== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
    ==7610== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
    ==7610== Command: ./file
    ==7610== 
    ==7610== 
    ==7610== HEAP SUMMARY:
    ==7610==     in use at exit: 0 bytes in 0 blocks
    ==7610==   total heap usage: 3 allocs, 3 frees, 47 bytes allocated
    ==7610== 
    ==7610== All heap blocks were freed -- no leaks are possible
    ==7610== 
    ==7610== For lists of detected and suppressed errors, rerun with: -s
    ==7610== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

    Código compilado e executado sem erros.
